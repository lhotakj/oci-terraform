name: "OCI Terraform - init"
description: "A simple action executing Terraform code (init, plan, apply, destroy)"
author: lhotakj
branding:
  icon: hard-drive
  color: purple

inputs:
  terraform-version:
    description: 'Target version of Terraform, by default uses the latest'
    required: false
    default: 'latest'
  private_key:
    description: 'Content of the private key'
    required: true
  private_key_password:
    description: 'Private key password'
    required: false
  fingerprint:
    description: 'Fingerprint of your private key'
    required: true
  context:
    description: 'Folder with terraform code'
    required: false
    default: 'latest'

runs:
  using: "composite"
  steps:
    - name: "Install Terraform ${{ inputs.version }}"
      shell: bash
      run: |
        echo "::debug::Download terraform"
        mkdir -p .binary
        PWD=`pwd`
        echo "::debug::Adding path"
        echo "${PWD}/.binary" >> $GITHUB_PATH
        cd .binary
        TERRAFORM_URL=`curl -sL https://releases.hashicorp.com/terraform/index.json | jq -r '.versions[].builds[].url' | egrep -v 'rc|beta|alpha' | egrep 'linux.*amd64' | tail -1`
        wget -q -O terraform_archive.zip ${TERRAFORM_URL}
        unzip -qq -o terraform_archive.zip
        rm -rf terraform_archive.zip
        terraform -v

    - name: "Prepare secrets"
      shell: bash
      run: |
        ls -al
        echo "Preparing secrets"
        IFS=
        echo "::debug::Preparing secrets"
        export TF_VAR_PRIVATE_KEY="${{ inputs.private_key }}"
        export TF_VAR_PRIVATE_KEY_PASSWORD="${{ inputs.private_key_password }}"
        export TF_VAR_FINGERPRINT="${{ inputs.fingerprint }}"
        echo "Injecting secrets"
        cd ${{ inputs.context }}        
        echo 'Ly8gb3ZlcnJpZGUgdGVtcGxhdGUNCnByb3ZpZGVyICJvY2kiIHsNCiAgcHJpdmF0ZV9rZXkgICAgICAgICAgPSA8PEVPRg0KJFRGX1ZBUl9QUklWQVRFX0tFWQ0KRU9GDQogIHByaXZhdGVfa2V5X3Bhc3N3b3JkID0gIlwiJFRGX1ZBUl9QUklWQVRFX0tFWV9QQVNTV09SRFwiIg0KICBmaW5nZXJwcmludCAgICAgICAgICA9ICJcIiRURl9WQVJfRklOR0VSUFJJTlRcIiINCn0NCg==' | base64 --decode > secrets_override.tf 
        eval "IFS=\"\n\"; echo \"$(<secrets_override.tf)\"" > secrets_override.tf
        cat secrets_override.tf

    - name: "Run init"
      working-directory: ${{ inputs.context }}
      shell: bash
      run: |
        terraform init